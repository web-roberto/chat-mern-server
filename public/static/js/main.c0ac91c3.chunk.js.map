{"version":3,"sources":["helpers/fetch.js","auth/AuthContext.js","types/types.js","context/chat/chatReducer.js","context/chat/ChatContext.js","context/SocketContext.js","hooks/useSocket.js","helpers/scrollToBottom.js","components/ChatSelect.js","components/Searchbox.js","components/SidebarChatItem.js","components/Sidebar.js","components/InboxPeople.js","helpers/horaMes.js","components/IncomingMessage.js","components/OutgoingMessage.js","helpers/fileUpload.js","helpers/GifSelect.js","components/SendMessage.js","uploadwidget.js","components/Messages.js","pages/ChatPage.js","pages/LoginPage.js","pages/RegisterPage.js","router/AuthRouter.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","ChatApp.js","index.js"],"names":["baseUrl","process","REACT_APP_API_URL","fetchSinToken","endpoint","data","a","method","url","fetch","resp","json","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","AuthContext","createContext","initialState","uid","checking","logged","name","email","AuthProvider","children","useState","auth","setAuth","login","password","ok","setItem","usuario","nombre","register","msg","verificaToken","useCallback","Provider","value","logout","removeItem","types","chatReducer","state","action","type","usuarios","payload","chatActivo","mensajes","de","para","ChatContext","ChatProvider","useReducer","chatState","dispatch","SocketContext","SocketProvider","serverPath","socket","setSocket","online","setOnline","conectarSocket","socketTemp","io","connect","transports","autoConnect","forceNew","query","desconectarSocket","disconnect","useEffect","connected","on","useSocket","useContext","mensaje","id","animateScroll","scrollToBottom","containerId","duration","ChatSelect","className","Searchbox","onClick","SidebarChatItem","src","width","alt","Sidebar","filter","user","map","controls","autoPlay","min-height","InboxPeople","horaMes","fecha","moment","format","IncomingMessage","startsWith","endsWith","createdAt","OutgoingMessage","fileUpload","file","formData","FormData","append","Swal","fire","title","text","allowOutsideClick","onBeforeOpen","showLoading","console","log","close","cloudResp","secure_url","GifSelect","icon","setIcon","setMensaje","Box","sx","maxWidth","maxHeigh","FormControl","fullWidth","InputLabel","height","Select","labelId","label","onChange","event","selection","target","emit","document","querySelector","click","autoComplete","MenuItem","handlePictureClick","Component","SendMessage","handleFileChange","e","files","fileUrl","style","display","onSubmit","ev","preventDefault","length","padding","placeholder","Messages","_id","ChatPage","LoginPage","rememberme","form","setForm","checked","readOnly","to","disabled","RegisterPage","AuthRouter","exact","path","component","PublicRoute","isAuthenticated","rest","props","PrivateRoute","AppRouter","locale","ChatApp","ReactDOM","render","getElementById"],"mappings":"wPAAMA,EAAUC,mIAAYC,kBAEfC,EAAa,uCAAG,WAAOC,EAAUC,GAAjB,iCAAAC,EAAA,yDAAuBC,EAAvB,+BAAgC,MAEnDC,EAFmB,UAETR,EAFS,YAEII,GAEb,QAAXG,EAJoB,iCAKFE,MAAOD,GALL,cAKfE,EALe,gBAMRA,EAAKC,OANG,iEAQFF,MAAOD,EAAK,CAC3BD,SACAK,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAWV,KAbL,eAQfK,EARe,iBAgBRA,EAAKC,OAhBG,qFAAH,wDAsBbK,EAAa,uCAAG,WAAOZ,EAAUC,GAAjB,mCAAAC,EAAA,yDAAuBC,EAAvB,+BAAgC,MAEnDC,EAFmB,UAETR,EAFS,YAEII,GACvBa,EAAQC,aAAaC,QAAQ,UAAY,GAE/B,QAAXZ,EALoB,iCAMFE,MAAOD,EAAK,CAC3BI,QAAS,CACL,UAAWK,KARE,cAMfP,EANe,gBAWRA,EAAKC,OAXG,iEAaFF,MAAOD,EAAK,CAC3BD,SACAK,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAWV,KAnBL,eAafK,EAbe,iBAsBRA,EAAKC,OAtBG,qFAAH,wDCrBbS,EAAcC,0BAErBC,EAAe,CACjBC,IAAK,KACLC,UAAU,EACVC,QAAQ,EACRC,KAAM,KACNC,MAAO,MAIEC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAEhBC,mBAASR,GAFO,mBAElCS,EAFkC,KAE5BC,EAF4B,KAIpCC,EAAK,uCAAG,WAAON,EAAOO,GAAd,iBAAA5B,EAAA,sEAESH,EAAc,QAAS,CAAEwB,QAAOO,YAAY,QAFrD,cAEJxB,EAFI,QAIAyB,KACNjB,aAAakB,QAAQ,QAAS1B,EAAKO,OAC3BoB,EAAY3B,EAAZ2B,QAERL,EAAQ,CACJT,IAAKc,EAAQd,IACbC,UAAU,EACVC,QAAQ,EACRC,KAAMW,EAAQC,OACdX,MAAOU,EAAQV,SAbb,kBAkBHjB,EAAKyB,IAlBF,2CAAH,wDAsBLI,EAAQ,uCAAG,WAAMD,EAAQX,EAAOO,GAArB,iBAAA5B,EAAA,sEAEMH,EAAc,YAAa,CAAEmC,SAAQX,QAAOO,YAAY,QAF9D,YAEPxB,EAFO,QAIHyB,GAJG,uBAKTjB,aAAakB,QAAQ,QAAS1B,EAAKO,OAC3BoB,EAAY3B,EAAZ2B,QAERL,EAAQ,CACJT,IAAKc,EAAQd,IACbC,UAAU,EACVC,QAAQ,EACRC,KAAMW,EAAQC,OACdX,MAAOU,EAAQV,QAbV,mBAgBF,GAhBE,gCAmBNjB,EAAK8B,KAnBC,2CAAH,0DAuBRC,EAAgBC,sBAAW,sBAAE,8BAAApC,EAAA,yDAEjBY,aAAaC,QAAQ,SAFJ,uBAK3Ba,EAAQ,CACJT,IAAK,KACLC,UAAU,EACVC,QAAQ,EACRC,KAAM,KACNC,MAAO,OAVgB,mBAapB,GAboB,uBAgBZX,EAAc,eAhBF,YAgBzBN,EAhByB,QAiBrByB,GAjBqB,wBAkB3BjB,aAAakB,QAAQ,QAAS1B,EAAKO,OAC3BoB,EAAY3B,EAAZ2B,QACRL,EAAQ,CACJT,IAAKc,EAAQd,IACbC,UAAU,EACVC,QAAQ,EACRC,KAAMW,EAAQC,OACdX,MAAOU,EAAQV,QAzBQ,mBA4BpB,GA5BoB,eA8B3BK,EAAQ,CACJT,IAAK,KACLC,UAAU,EACVC,QAAQ,EACRC,KAAM,KACNC,MAAO,OAnCgB,mBAsCpB,GAtCoB,4CAyChC,IAWH,OACI,cAACP,EAAYuB,SAAb,CAAsBC,MAAO,CACzBb,OACAE,QACAM,WACAE,gBACAI,OAfO,WACX3B,aAAa4B,WAAW,SACxBd,EAAQ,CACJR,UAAU,EACVC,QAAQ,MAMZ,SAOMI,K,gBCzHDkB,EAES,2BAFTA,EAGI,sBAHJA,EAIK,uBAJLA,EAKO,yBCEPC,EAAc,SAAEC,EAAOC,GAGhC,OAASA,EAAOC,MAEZ,KAAKJ,EACD,OAAO,2BACAE,GADP,IAEIG,SAAS,YAAMF,EAAOG,WAG9B,KAAKN,EACD,OAAKE,EAAMK,aAAeJ,EAAOG,QAAiBJ,EAE3C,2BACAA,GADP,IAEIK,WAAYJ,EAAOG,QACnBE,SAAU,KAIlB,KAAKR,EACD,OAAKE,EAAMK,aAAeJ,EAAOG,QAAQG,IACpCP,EAAMK,aAAeJ,EAAOG,QAAQI,KAE9B,2BACAR,GADP,IAEIM,SAAS,GAAD,mBAAON,EAAMM,UAAb,CAAuBL,EAAOG,YAGnCJ,EAGf,KAAKF,EACD,OAAO,2BACAE,GADP,IAEIM,SAAS,YAAML,EAAOG,WAG9B,QACI,OAAOJ,IC7CNS,EAAcrC,0BAErBC,EAAe,CACjBC,IAAK,GACL+B,WAAY,KACZF,SAAU,GACVG,SAAU,IAIDI,EAAe,SAAC,GAAkB,IAAhB9B,EAAe,EAAfA,SAAe,EAEV+B,qBAAWZ,EAAa1B,GAFd,mBAElCuC,EAFkC,KAEvBC,EAFuB,KAI1C,OACI,cAACJ,EAAYf,SAAb,CAAsBC,MAAO,CACzBiB,YACAC,YAFJ,SAIMjC,K,0BCbDkC,EAAgB1C,0BAGhB2C,EAAiB,SAAC,GAAkB,IAAhBnC,EAAe,EAAfA,SAAe,ECTvB,SAAEoC,GAAiB,IAAD,EAETnC,mBAAS,MAFA,mBAE/BoC,EAF+B,KAEvBC,EAFuB,OAGTrC,oBAAS,GAHA,mBAG/BsC,EAH+B,KAGvBC,EAHuB,KAKjCC,EAAiB5B,uBAAa,WAEhC,IAAMzB,EAAQC,aAAaC,QAAQ,SAE7BoD,EAAaC,IAAGC,QAASR,EAAY,CACvCS,WAAY,CAAC,aACbC,aAAa,EACbC,UAAU,EACVC,MAAO,CACH,UAAW5D,KAGnBkD,EAAWI,KACb,CAAEN,IAEEa,EAAoBpC,uBAAa,WAC7B,OAANwB,QAAM,IAANA,KAAQa,eACV,CAAEb,IAeJ,OAZAc,qBAAU,WACNX,EAAS,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAQe,aACpB,CAACf,IAEJc,qBAAU,WACA,OAANd,QAAM,IAANA,KAAQgB,GAAG,WAAW,kBAAMb,GAAW,QACxC,CAAEH,IAELc,qBAAU,WACA,OAANd,QAAM,IAANA,KAAQgB,GAAG,cAAc,kBAAMb,GAAW,QAC3C,CAAEH,IAEE,CACHA,SACAE,SACAE,iBACAQ,qBD9B0DK,CAAU,yBAAhEjB,EAFoC,EAEpCA,OAAQE,EAF4B,EAE5BA,OAAQE,EAFoB,EAEpBA,eAAgBQ,EAFI,EAEJA,kBAChC/C,EAASqD,qBAAYhE,GAArBW,KACA+B,EAAasB,qBAAY1B,GAAzBI,SAwCR,OAtCAkB,qBAAU,WACDjD,EAAKN,QACN6C,MAEL,CAAEvC,EAAMuC,IAEXU,qBAAU,WACAjD,EAAKN,QACPqD,MAEL,CAAE/C,EAAM+C,IAGXE,qBAAU,WAEA,OAANd,QAAM,IAANA,KAAQgB,GAAI,kBAAkB,SAAC9B,GAC3BU,EAAS,CACLX,KAAMJ,EACNM,QAASD,SAIlB,CAAEc,EAAQJ,IAGbkB,qBAAU,WACA,OAANd,QAAM,IAANA,KAAQgB,GAAG,oBAAoB,SAACG,GEjCF,IAAEC,EFkC5BxB,EAAS,CACLX,KAAMJ,EACNM,QAASgC,IEpCeC,EFuCL,WErC/BC,gBAAcC,eAAe,CACzBC,YAAaH,EACbI,SAAU,WFsCX,CAAExB,EAAQJ,IAIT,cAACC,EAAcpB,SAAf,CAAwBC,MAAO,CAAEsB,SAAQE,UAAzC,SACMvC,K,gBGzDD8D,EAAa,WACtB,OACI,qBAAKC,UAAU,gBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBACA,wDACA,2ECLHC,EAAY,WAAO,IAAD,EAEFT,qBAAYhE,GAA7BW,EAFmB,EAEnBA,KAAMc,EAFa,EAEbA,OAEd,OACI,sBAAK+C,UAAU,eAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,6BAAM7D,EAAKL,SAEf,qBAAKkE,UAAU,WAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,wBACIA,UAAU,kBACVE,QAAUjD,EAFd,2BCNPkD,EAAkB,SAAC,GAAiB,IAAf1D,EAAc,EAAdA,QAAc,EAEZ+C,qBAAY1B,GAApCG,EAFoC,EAEpCA,UAAWC,EAFyB,EAEzBA,SACXR,EAAeO,EAAfP,WAEFwC,EAAO,uCAAG,4BAAAxF,EAAA,6DAEZwD,EAAS,CACLX,KAAMJ,EACNM,QAAShB,EAAQd,MAJT,SAQOP,EAAc,YAAD,OAAcqB,EAAQd,MAR1C,OAQNb,EARM,OASZoD,EAAS,CACLX,KAAMJ,EACNM,QAAS3C,EAAK6C,WHrBM+B,EGwBT,WHtBnBC,gBAAcC,eAAe,CACzBC,YAAaH,EACbI,SAAU,IGME,iCHVU,IAAEJ,IGUZ,OAAH,qDAiBb,OACI,qBACIM,UAAS,oBAAiBvD,EAAQd,MAAQ+B,GAAe,eACzDwC,QAAUA,EAFd,SAKI,sBAAKF,UAAU,cAAf,UACI,qBAAKA,UAAU,WAAf,SAEI,qBAAKI,IAAI,6DAA6DC,MAAM,MAAMC,IAAI,qBAE1F,sBAAKN,UAAU,UAAf,UACI,mCAAOvD,EAAQC,OAAf,OAEMD,EAAQ+B,OACJ,sBAAMwB,UAAU,eAAhB,oBACA,sBAAMA,UAAU,cAAhB,8BCvCjBO,EAAU,WAAO,IAElBtC,EAAcuB,qBAAY1B,GAA1BG,UAGAtC,EAFS6D,qBAAYhE,GAArBW,KAEAR,IAER,OACI,sBAAKqE,UAAU,aAAf,UAEQ/B,EAAUT,SACLgD,QAAQ,SAAAC,GAAI,OAAIA,EAAK9E,MAAQA,KAC7B+E,KAAK,SAACjE,GAAD,OACN,cAAC,EAAD,CAEIA,QAAUA,GADJA,EAAQd,QAQ1B,qBAAKqE,UAAU,gBAOH,qBAAKA,UAAU,eAAf,SAMI,uBAAOW,UAAQ,EAACC,UAAQ,EAACC,aAAW,MAAMR,MAAM,OAAhD,SACI,wBAAQD,IAAI,kGAAkG7C,KAAK,sBCvCtIuD,EAAc,WACvB,OACI,sBAAKd,UAAU,eAAf,UAEI,cAAC,EAAD,IAEA,cAAC,EAAD,Q,iBCPCe,EAAU,SAAEC,GAIrB,OAFeC,IAAQD,GAETE,OAAO,sBCJZC,EAAkB,SAAC,GAAa,IAAXvE,EAAU,EAAVA,IAE9B,OACI,sBAAKoD,UAAU,eAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKI,IAAI,mDAAmDE,IAAI,YAEpE,qBAAKN,UAAU,eAAf,SACI,sBAAKA,UAAU,qBAAf,UAEMpD,EAAI6C,QAAQ2B,WAAW,8BACpBxE,EAAI6C,QAAQ4B,SAAS,QACtB,uBAAOV,UAAQ,EAACC,UAAQ,EAACC,aAAW,MAAMR,MAAM,OAAhD,SACQ,wBAAQD,IAAMxD,EAAI6C,QAASlC,KAAK,gBAEpC,+BAAM,qBAAK6C,IAAMxD,EAAI6C,YAC5B,4BAAK7C,EAAI6C,UAGV,uBAAMO,UAAU,YAAhB,cAA+Be,EAASnE,EAAI0E,uBCnBnDC,EAAkB,SAAC,GAAa,IAAX3E,EAAU,EAAVA,IAC9B,OACI,qBAAKoD,UAAU,eAAf,SACI,sBAAKA,UAAU,WAAf,UAEUpD,EAAI6C,QAAQ2B,WAAW,8BACpBxE,EAAI6C,QAAQ4B,SAAS,QACtB,uBAAOV,UAAQ,EAACC,UAAQ,EAACC,aAAW,MAAMR,MAAM,OAAhD,SACQ,wBAAQD,IAAMxD,EAAI6C,QAASlC,KAAK,gBAEpC,+BAAM,qBAAK6C,IAAMxD,EAAI6C,YAC5B,4BAAK7C,EAAI6C,UAEd,uBAAMO,UAAU,YAAhB,cAA+Be,EAASnE,EAAI0E,WAA5C,a,iBCdHE,EAAU,uCAAG,WAAQC,GAAR,mBAAA/G,EAAA,4DACL,sDAEXgH,EAAW,IAAIC,UACZC,OAAO,gBAAgB,UAChCF,EAASE,OAAO,OAAQH,GACxBI,IAAKC,KAAK,CAACC,MAAM,eAAgBC,KAAK,gBAAgBC,mBAAkB,EACxEC,aAAc,WAAKL,IAAKM,iBAPF,SASlBC,QAAQC,IAAI,wBATM,SAUCxH,MATN,qDASuB,CAChCF,OAAQ,OACRM,KAAMyG,IAZQ,UAUZ5G,EAVY,OAclB+G,IAAKS,QACCxH,EAAKyB,GAfO,kCAeWzB,EAAKC,OAfhB,oCAiBlBqH,QAAQC,IAAI,6EAjBM,UAkBMvH,EAAKC,OAlBX,eAkBZwH,EAlBY,OAmBlBH,QAAQC,IAAI,mBAAmBE,EAAUC,YAnBvB,kBAoBXD,EAAUC,YApBC,wCAsBlBX,IAAKC,KAAK,QAAS,qBAAsB,SAtBvB,+DAAH,sD,6CCSVW,EAAY,WACvB,IAD6B,EAELvG,mBAAS,GAFJ,mBAEtBwG,EAFsB,KAEhBC,EAFgB,OAGGzG,mBAAS,IAHZ,mBAGrBuD,EAHqB,KAGZmD,EAHY,KAKrB3E,EAAcuB,qBAAY1B,GAA1BG,UACAK,EAAWkB,qBAAYrB,GAAvBG,OACAnC,EAASqD,qBAAYhE,GAArBW,KAoDR,OACE,cAAC0G,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,IAAKC,SAAS,IAAnC,SACE,eAACC,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,eAACC,EAAA,EAAD,CAAYzD,GAAG,2BAAf,cAA2C,qBAAKU,IAAI,uFAAwFE,IAAI,OAAOD,MAAM,KAAK+C,OAAO,OAAzK,OACA,eAACC,EAAA,EAAD,CACEC,QAAQ,2BACR5D,GAAG,qBACH1C,MAAO0F,EACPa,MAAM,OACNC,SA1Da,SAACC,GAEpB,IAAMC,EAAUD,EAAME,OAAO3G,MAM7B,OAJD2F,EAAQe,GACPtB,QAAQC,IAAIqB,GACZtB,QAAQC,IAAI,8DAA8DqB,GAElEA,GACJ,KAAK,EAAId,EAAW,yFACpB,MACF,QACAR,QAAQC,IAAI,cAkBXD,QAAQC,IAAI,yDAAyDqB,GAErEtB,QAAQC,IAAI,0CAA0C5C,GAEpDnB,EAAOsF,KAAM,mBAAoB,CACjChG,GAAIzB,EAAKR,IACTkC,KAAMI,EAAUP,WAKf+B,YACA2C,QAAQC,IAAI,4CAA4C5C,GACvDoE,SAASC,cAAc,aAAaC,SAgBrCC,aAAa,MANf,UAOE,cAACC,EAAA,EAAD,CAAUjH,MAAO,EAAjB,SAAoB,qBAAKoD,IAAI,wFAAwFE,IAAI,OAAOD,MAAM,KAAK+C,OAAO,SAClJ,cAACa,EAAA,EAAD,CAAUjH,MAAO,EAAjB,SAAoB,qBAAKoD,IAAI,wFAAwFE,IAAI,OAAOD,MAAM,KAAK+C,OAAO,SAClJ,cAACa,EAAA,EAAD,CAAUjH,MAAO,EAAjB,SAAoB,qBAAKoD,IAAI,uFAAwFE,IAAI,OAAOD,MAAM,KAAK+C,OAAO,SAClJ,cAACa,EAAA,EAAD,CAAUjH,MAAO,EAAjB,SAAoB,qBAAKoD,IAAI,uFAAwFE,IAAI,OAAOD,MAAM,KAAK+C,OAAO,SAClJ,cAACa,EAAA,EAAD,CAAUjH,MAAO,EAAjB,SAAoB,qBAAKoD,IAAI,uFAAwFE,IAAI,OAAOD,MAAM,KAAK+C,OAAO,SAClJ,cAACa,EAAA,EAAD,CAAUjH,MAAO,EAAjB,SAAoB,qBAAKoD,IAAI,wFAAyFE,IAAI,OAAOD,MAAM,KAAK+C,OAAO,SACnJ,cAACa,EAAA,EAAD,CAAUjH,MAAO,EAAjB,SAAoB,qBAAKoD,IAAI,wFAAyFE,IAAI,OAAOD,MAAM,KAAK+C,OAAO,SACnJ,cAACa,EAAA,EAAD,CAAUjH,MAAO,EAAjB,SAAoB,qBAAKoD,IAAI,wFAAyFE,IAAI,OAAOD,MAAM,KAAK+C,OAAO,SACnJ,cAACa,EAAA,EAAD,CAAUjH,MAAO,EAAjB,SAAoB,qBAAKoD,IAAI,wFAAyFE,IAAI,OAAOD,MAAM,KAAK+C,OAAO,SACnJ,cAACa,EAAA,EAAD,CAAUjH,MAAO,GAAjB,SAAqB,qBAAKoD,IAAI,yFAA0FE,IAAI,OAAOD,MAAM,KAAK+C,OAAO,SACrJ,cAACa,EAAA,EAAD,CAAUjH,MAAO,GAAjB,SAAqB,qBAAKoD,IAAI,yFAA0FE,IAAI,OAAOD,MAAM,KAAK+C,OAAO,kB,qCC9EzJc,ICVqBC,YDUA,WACpBN,SAASC,cAAc,iBAAiBC,UA0BlCK,GAAc,WAAO,IAAD,EACGlI,mBAAS,IADZ,mBACrBuD,EADqB,KACZmD,EADY,KAErBtE,EAAWkB,qBAAYrB,GAAvBG,OACAnC,EAASqD,qBAAYhE,GAArBW,KACA8B,EAAcuB,qBAAY1B,GAA1BG,UAKFoG,EAAgB,uCAAG,WAAMC,GAAN,iBAAA5J,EAAA,yDACf+G,EAAO6C,EAAEX,OAAOY,MAAM,GAEpBnC,QAAQC,IAAI,iEAAiEZ,IACxEA,EAJQ,wBAKTW,QAAQC,IAAI,8CAA8CZ,GALjD,kBAOmBD,EAAYC,GAP/B,OAOE+C,EAPF,OAQLpC,QAAQC,IAAI,qBAAqBmC,GACzBA,GACJ5B,EAAW4B,GAGXlG,EAAOsF,KAAM,mBAAoB,CAChChG,GAAIzB,EAAKR,IACTkC,KAAMI,EAAUP,WACjB+B,YAEAoE,SAASC,cAAc,aAAaC,QACpCnB,EAAW,KAEXf,IAAKC,KAAK,QAAQ,4BAA4B,SArB7C,wDAwBDD,IAAKC,KAAK,QAAS,qBAAsB,SAxBxC,qCA2BFD,IAAKC,KAAK,QAAQ,mBAAmB,SA3BnC,0DAAH,sDAiDtB,OACA,qCAEQ,qBAAK9B,UAAU,mBAAf,SAIK,gCACG,uBAAON,GAAG,eAAenC,KAAK,OAAOzB,KAAK,OAAQ2I,MAAO,CAAEC,QAAS,QAChElB,SAAUa,IACd,wBAAQ3E,GAAG,qBAAoBM,UAAU,oBAAoByE,MAAO,CAAEpE,MAAO,SAAWH,QAAUgE,GAAlG,8BAKZ,sBAAMS,SAjCO,SAACC,GACdA,EAAGC,iBACqB,IAAnBpF,EAAQqF,OAQbxG,EAAOsF,KAAM,mBAAoB,CAC7BhG,GAAIzB,EAAKR,IACTkC,KAAMI,EAAUP,WAChB+B,YAXyBmD,EAAW,KA+BxC,SACI,sBAAK5C,UAAU,eAAf,UACA,sBAAKA,UAAU,WAAWyE,MAAO,CAACM,QAAQ,8BAA1C,UACQ,cAAC,EAAD,IACA,8BAMJ,qBAAK/E,UAAU,2BAAf,SACI,uBACIzC,KAAK,OACLmC,GAAG,UACHM,UAAU,YACVgF,YAAY,aACZhI,MAAQyC,EACR+D,SApFH,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OAChBf,EAAYe,EAAO3G,QAoFHgH,aAAa,UAGrB,qBAAKhE,UAAU,WAAf,SACI,wBAAQN,GAAG,WAAUM,UAAU,oBAAoBzC,KAAK,SAAxD,6BE/HP0H,GAAW,WAAO,IAEnBhH,EAAcuB,qBAAY1B,GAA1BG,UACA9B,EAASqD,qBAAYhE,GAArBW,KAER,OACI,sBAAK6D,UAAU,QAAf,UAGI,qBACIN,GAAG,WACHM,UAAU,cAFd,SAMQ/B,EAAUN,SAAS+C,KAAK,SAAA9D,GAAG,OACrBA,EAAIiB,OAAS1B,EAAKR,IACd,cAAC,EAAD,CAAiCiB,IAAMA,GAAhBA,EAAIsI,KAC3B,cAAC,EAAD,CAAiCtI,IAAMA,GAAhBA,EAAIsI,UAS9C,cAAC,GAAD,QCzBEC,I,OAAW,WAAO,IAEnBlH,EAAcuB,qBAAY1B,GAA1BG,UAER,OACI,qBAAK+B,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UAEI,cAAC,EAAD,IAGM/B,EAAUP,WACN,cAAC,GAAD,IACA,cAAC,EAAD,W,QChBb0H,GAAY,WAAO,IAEpB/I,EAAUmD,qBAAYhE,GAAtBa,MAFmB,EAIDH,mBAAS,CAC/BH,MAAO,GACPO,SAAU,GACV+I,YAAY,IAPW,mBAInBC,EAJmB,KAIbC,EAJa,KAU3BnG,qBAAU,WACN,IAAMrD,EAAQT,aAAaC,QAAQ,SAC9BQ,GACDwJ,GAAS,SAACD,GAAD,mBAAC,eACHA,GADE,IAELvJ,QACAsJ,YAAY,SAIrB,IAGH,IAAM7B,EAAW,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACR7H,EAAgB6H,EAAhB7H,KAAMkB,EAAU2G,EAAV3G,MACduI,EAAQ,2BACDD,GADA,mBAEFxJ,EAAOkB,MAYV2H,EAAQ,uCAAG,WAAMC,GAAN,iBAAAlK,EAAA,6DACbkK,EAAGC,iBAEFS,EAAKD,WACA/J,aAAakB,QAAQ,QAAS8I,EAAKvJ,OACnCT,aAAa4B,WAAW,SAEtBnB,EAAoBuJ,EAApBvJ,MAAOO,EAAagJ,EAAbhJ,SAPF,SAQID,EAAON,EAAOO,GARlB,eAWTuF,IAAKC,KAAK,QAAS,uCAAqC,SAX/C,2CAAH,sDAoBd,OACI,uBACI9B,UAAU,6CACV2E,SAAWA,EAFf,UAII,sBAAM3E,UAAU,2BAAhB,4BAIA,sBAAKA,UAAU,oCAAf,UACI,uBACIA,UAAU,WACVzC,KAAK,QACLzB,KAAK,QACLkJ,YAAY,QACZhI,MAAQsI,EAAKvJ,MACbyH,SAAWA,IAEf,sBAAMxD,UAAU,sBAIpB,sBAAKA,UAAU,oCAAf,UACI,uBACIA,UAAU,WACVzC,KAAK,WACLzB,KAAK,WACLkJ,YAAY,WACZhI,MAAQsI,EAAKhJ,SACbkH,SAAWA,IAEf,sBAAMxD,UAAU,sBAGpB,sBAAKA,UAAU,WAAf,UACI,sBACIA,UAAU,MACVE,QAAU,kBAhEtBkC,QAAQC,IAAI,WACZkD,EAAQ,2BACDD,GADA,IAEHD,YAAaC,EAAKD,eA2Dd,UAII,uBACIrF,UAAU,oBACVN,GAAG,OACHnC,KAAK,WACLzB,KAAK,aACL0J,QAAUF,EAAKD,WACfI,UAAQ,IAEZ,uBAAOzF,UAAU,oBAAjB,2BAKJ,qBAAKA,UAAU,iBAAf,SACI,cAAC,IAAD,CAAM0F,GAAG,iBAAiB1F,UAAU,OAApC,gCAMR,qBAAKA,UAAU,qCAAf,SACI,wBACIzC,KAAK,SACLyC,UAAU,oBACV2F,WAnEHL,EAAKvJ,MAAM+I,OAAS,GAAKQ,EAAKhJ,SAASwI,OAAS,GAgEjD,4BCrHHc,GAAe,WAAO,IAEvBjJ,EAAa6C,qBAAYhE,GAAzBmB,SAFsB,EAIJT,mBAAS,CAC/BH,MAAO,iBACPO,SAAU,SACVR,KAAM,eAPoB,mBAItBwJ,EAJsB,KAIhBC,EAJgB,KAUxB/B,EAAW,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACR7H,EAAgB6H,EAAhB7H,KAAMkB,EAAU2G,EAAV3G,MACduI,EAAQ,2BACDD,GADA,mBAEFxJ,EAAOkB,MAIV2H,EAAQ,uCAAG,WAAMC,GAAN,qBAAAlK,EAAA,6DACbkK,EAAGC,iBAEK9I,EAA0BuJ,EAA1BvJ,MAAOO,EAAmBgJ,EAAnBhJ,SAAUR,EAASwJ,EAATxJ,KAHZ,SAIKa,EAAUb,EAAMC,EAAOO,GAJ5B,QAMA,KAFPM,EAJO,SAOTiF,IAAKC,KAAK,QAASlF,EAAK,SAPf,2CAAH,sDAoBd,OACI,uBACIoD,UAAU,6CACV2E,SAAWA,EAFf,UAII,sBAAM3E,UAAU,2BAAhB,6BAIA,sBAAKA,UAAU,oCAAf,UACI,uBACIA,UAAU,WACVzC,KAAK,OACLzB,KAAK,OACLkJ,YAAY,SACZhI,MAAQsI,EAAKxJ,KACb0H,SAAWA,IAEf,sBAAMxD,UAAU,sBAIpB,sBAAKA,UAAU,oCAAf,UACI,uBACIA,UAAU,WACVzC,KAAK,QACLzB,KAAK,QACLkJ,YAAY,QACZhI,MAAQsI,EAAKvJ,MACbyH,SAAWA,IAEf,sBAAMxD,UAAU,sBAIpB,sBAAKA,UAAU,oCAAf,UACI,uBACIA,UAAU,WACVzC,KAAK,WACLzB,KAAK,WACLkJ,YAAY,WACZhI,MAAQsI,EAAKhJ,SACbkH,SAAWA,IAEf,sBAAMxD,UAAU,sBAGpB,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,cAAC,IAAD,CAAM0F,GAAG,cAAc1F,UAAU,OAAjC,mCAMR,qBAAKA,UAAU,qCAAf,SACI,wBACIzC,KAAK,SACLyC,UAAU,oBACV2F,WAlERL,EAAKvJ,MAAM+I,OAAS,GACpBQ,EAAKhJ,SAASwI,OAAS,GACvBQ,EAAKxJ,KAAKgJ,OAAS,GA6Df,gCC/FHe,I,OAAa,WACtB,OAEI,qBAAK7F,UAAU,UAAf,SACF,qBAAKA,UAAU,qBAAf,SACC,qBAAKA,UAAU,8BAAf,SAEa,eAAC,IAAD,WACI,cAAC,IAAD,CAAO8F,OAAK,EAACC,KAAK,cAAcC,UAAYZ,KAC5C,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,iBAAiBC,UAAYJ,KAE/C,cAAC,IAAD,CAAUF,GAAG,2B,SChBxBO,GAAc,SAAC,GAIrB,IAHJC,EAGG,EAHHA,gBACW/B,EAER,EAFH6B,UACGG,EACA,gDACF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACIH,UAAY,SAACI,GAAD,OACLF,EAEG,cAAC,IAAD,CAAUR,GAAG,MADb,cAACvB,EAAD,eAAgBiC,SCTzBC,GAAe,SAAC,GAItB,IAHJH,EAGG,EAHHA,gBACW/B,EAER,EAFH6B,UACGG,EACA,gDACF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACIH,UAAY,SAACI,GAAD,OACNF,EACI,cAAC/B,EAAD,eAAgBiC,IAChB,cAAC,IAAD,CAAUV,GAAG,eCAtBY,GAAY,WAAO,IAAD,EAEK9G,qBAAYhE,GAApCW,EAFmB,EAEnBA,KAAMU,EAFa,EAEbA,cAOd,OALAuC,qBAAW,WACPvC,MACF,CAACA,IAGEV,EAAKP,SACC,kDAKP,cAAC,IAAD,UACI,8BAEI,eAAC,IAAD,WAEI,cAAC,GAAD,CAAasK,gBAAkB/J,EAAKN,OAASkK,KAAK,QAAQC,UAAYH,KACtE,cAAC,GAAD,CAAcK,gBAAkB/J,EAAKN,OAASiK,OAAK,EAACC,KAAK,IAAIC,UAAYb,KAEzE,cAAC,IAAD,CAAUO,GAAG,c,OC5BjCzE,IAAOsF,OAAO,MAGP,IAAMC,GAAU,WACnB,OACI,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,GAAD,W,OCVpBC,IAASC,OACP,cAAC,GAAD,IACA7C,SAAS8C,eAAe,W","file":"static/js/main.c0ac91c3.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\nexport const fetchSinToken = async( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ) {\n        const resp = await fetch( url );\n        return await resp.json();\n    } else {\n        const resp = await fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        })\n\n        return await resp.json();\n    }\n\n}\n\n\nexport const fetchConToken = async( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        const resp = await fetch( url, {\n            headers: {\n                'x-token': token\n            }\n        });\n        return await resp.json();\n    } else {\n        const resp = await fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        })\n\n        return await resp.json();\n    }\n\n}\n\n","import React, { createContext, useCallback, useState } from 'react';\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\n\nexport const AuthContext = createContext();\n\nconst initialState = {\n    uid: null,\n    checking: true,\n    logged: false,\n    name: null,\n    email: null,\n};\n\n\nexport const AuthProvider = ({ children }) => {\n\n    const [ auth, setAuth ] = useState(initialState)\n\n    const login = async( email, password ) => {\n\n        const resp = await fetchSinToken('login', { email, password }, 'POST');\n\n        if ( resp.ok ) {\n            localStorage.setItem('token', resp.token );\n            const { usuario } = resp;\n\n            setAuth({\n                uid: usuario.uid,\n                checking: false,\n                logged: true,\n                name: usuario.nombre,\n                email: usuario.email,\n            });\n\n        }\n\n        return resp.ok;\n\n    }\n\n    const register = async(nombre, email, password) => {\n\n        const resp = await fetchSinToken('login/new', { nombre, email, password }, 'POST');\n        \n        if ( resp.ok ) {\n            localStorage.setItem('token', resp.token );\n            const { usuario } = resp;\n\n            setAuth({\n                uid: usuario.uid,\n                checking: false,\n                logged: true,\n                name: usuario.nombre,\n                email: usuario.email,\n            });\n\n            return true;\n        }\n\n        return resp.msg;\n\n    }\n\n    const verificaToken = useCallback( async() => {\n\n        const token = localStorage.getItem('token');\n        // Si token no existe\n        if ( !token ) {\n            setAuth({\n                uid: null,\n                checking: false,\n                logged: false,\n                name: null,\n                email: null,\n            })\n\n            return false;\n        }\n\n        const resp = await fetchConToken('login/renew');\n        if ( resp.ok ) {\n            localStorage.setItem('token', resp.token );\n            const { usuario } = resp;\n            setAuth({\n                uid: usuario.uid,\n                checking: false,\n                logged: true,\n                name: usuario.nombre,\n                email: usuario.email,\n            });\n\n            return true;\n        } else {\n            setAuth({\n                uid: null,\n                checking: false,\n                logged: false,\n                name: null,\n                email: null,\n            });\n\n            return false;\n        }\n\n    }, [])\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        setAuth({\n            checking: false,\n            logged: false,\n        });\n    }\n\n\n    return (\n        <AuthContext.Provider value={{\n            auth,\n            login,\n            register,\n            verificaToken,\n            logout,\n        }}>\n            { children }\n        </AuthContext.Provider>\n    )\n}\n\n","\n\nexport const types = {\n\n    usuariosCargados: '[Chat] Usuarios cargados',\n    activarChat: '[Chat] Activar Chat',\n    nuevoMensaje: '[Chat] Nuevo Mensaje',\n    cargarMensajes: '[Chat] Cargar Mensajes'\n}","import { types } from '../../types/types';\n\n// const initialState = {\n//     uid: '',\n//     chatActivo: null, // UID del usuario al que yo quiero enviar mensajes\n//     usuarios: [], // Todos los usuarios de la base datos\n//     mensajes: [], // El chat seleccionado\n// }\n\nexport const chatReducer = ( state, action ) => {\n\n\n    switch ( action.type ) {\n        \n        case types.usuariosCargados:\n            return {\n                ...state,\n                usuarios: [ ...action.payload ]\n            }\n        \n        case types.activarChat:\n            if ( state.chatActivo === action.payload ) return state;\n\n            return {\n                ...state,\n                chatActivo: action.payload,\n                mensajes: []\n            }\n\n\n        case types.nuevoMensaje:\n            if ( state.chatActivo === action.payload.de || \n                 state.chatActivo === action.payload.para   \n            ) {\n                return {\n                    ...state,\n                    mensajes: [ ...state.mensajes, action.payload ]\n                }\n            } else {\n                return state;\n            }\n\n        case types.cargarMensajes:\n            return {\n                ...state,\n                mensajes: [ ...action.payload ]\n            }\n    \n        default:\n            return state;\n    }\n\n}\n\n","import React, { createContext, useReducer } from 'react';\nimport { chatReducer } from './chatReducer';\n\n\nexport const ChatContext = createContext();\n\nconst initialState = {\n    uid: '',\n    chatActivo: null, // UID del usuario al que yo quiero enviar mensajes\n    usuarios: [], // Todos los usuarios de la base datos\n    mensajes: [], // El chat seleccionado\n}\n\n\nexport const ChatProvider = ({ children }) => {\n\n    const [ chatState, dispatch ] = useReducer(chatReducer, initialState);\n\n    return (\n        <ChatContext.Provider value={{\n            chatState,\n            dispatch\n        }}>\n            { children }\n        </ChatContext.Provider>\n    )\n}\n\n\n\n","import React, { useContext, useEffect } from 'react';\nimport { createContext } from 'react';\n\nimport { AuthContext } from '../auth/AuthContext';\nimport { ChatContext } from './chat/ChatContext';\nimport { useSocket } from '../hooks/useSocket'\n\nimport { types } from '../types/types';\nimport { scrollToBottomAnimated } from '../helpers/scrollToBottom';\n\nexport const SocketContext = createContext();\n\n\nexport const SocketProvider = ({ children }) => {\n\n    const { socket, online, conectarSocket, desconectarSocket } = useSocket('http://localhost:8080');\n    const { auth } = useContext( AuthContext );\n    const { dispatch } = useContext( ChatContext );\n\n    useEffect(() => {\n        if ( auth.logged ) {\n            conectarSocket();\n        }\n    }, [ auth, conectarSocket ]);\n\n    useEffect(() => {\n        if ( !auth.logged ) {\n            desconectarSocket();\n        }\n    }, [ auth, desconectarSocket ]);\n\n    // Escuchar los cambios en los usuarios conectados\n    useEffect(() => {\n        \n        socket?.on( 'lista-usuarios', (usuarios) => {\n            dispatch({\n                type: types.usuariosCargados,\n                payload: usuarios\n            });\n        })\n\n    }, [ socket, dispatch ]);\n\n\n    useEffect(() => {\n        socket?.on('mensaje-personal', (mensaje) => {\n            dispatch({\n                type: types.nuevoMensaje,\n                payload: mensaje\n            });\n\n            scrollToBottomAnimated('mensajes');\n        })\n\n    }, [ socket, dispatch ]);\n\n\n    return (\n        <SocketContext.Provider value={{ socket, online }}>\n            { children }\n        </SocketContext.Provider>\n    )\n}","import { useCallback, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\n\nexport const useSocket = ( serverPath ) => {\n    \n    const [ socket, setSocket ] = useState(null);\n    const [ online, setOnline ] = useState(false);\n\n    const conectarSocket = useCallback( () => {\n\n        const token = localStorage.getItem('token');\n\n        const socketTemp = io.connect( serverPath, { \n            transports: ['websocket'],\n            autoConnect: true,\n            forceNew: true,\n            query: {\n                'x-token': token\n            }\n        });\n        setSocket( socketTemp );\n    },[ serverPath ]);\n\n    const desconectarSocket = useCallback( () => {\n        socket?.disconnect();\n    },[ socket ]);\n\n\n    useEffect(() => {\n        setOnline( socket?.connected );\n    }, [socket])\n\n    useEffect(() => {\n        socket?.on('connect', () => setOnline( true ));\n    }, [ socket ])\n\n    useEffect(() => {\n        socket?.on('disconnect', () => setOnline( false ));\n    }, [ socket ])\n\n    return {\n        socket,\n        online,\n        conectarSocket,\n        desconectarSocket\n    }\n}","import { animateScroll } from 'react-scroll';\n\n\nexport const scrollToBottom = ( id ) => {\n    \n    animateScroll.scrollToBottom({\n        containerId: id,\n        duration: 0\n    });\n\n}\n\nexport const scrollToBottomAnimated = ( id ) => {\n    \n    animateScroll.scrollToBottom({\n        containerId: id,\n        duration: 250\n    });\n\n}","import React from 'react'\n\nexport const ChatSelect = () => {\n    return (\n        <div className=\"middle-screen\">\n            <div className=\"alert-info\">\n                <hr />\n                <h3>Seleccione una persona</h3>\n                <span>\n                    Para comenzar una conversación\n                </span>\n\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { AuthContext } from '../auth/AuthContext'\n\nexport const Searchbox = () => {\n\n    const { auth, logout } = useContext( AuthContext );\n\n    return (\n        <div className=\"headind_srch\">\n            <div className=\"recent_heading mt-2\">\n                <h4>{ auth.name }</h4>\n            </div>\n            <div className=\"srch_bar\">\n                <div className=\"stylish-input-group\">\n                    <button \n                        className=\"btn text-danger\"\n                        onClick={ logout }\n                    >\n                        Salir\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react';\n\nimport { ChatContext } from '../context/chat/ChatContext';\nimport { fetchConToken } from '../helpers/fetch';\nimport { scrollToBottom } from '../helpers/scrollToBottom';\n\nimport { types } from '../types/types';\n\nexport const SidebarChatItem = ({ usuario }) => {\n\n    const { chatState, dispatch } = useContext( ChatContext );\n    const { chatActivo } = chatState;\n\n    const onClick = async() => {\n\n        dispatch({\n            type: types.activarChat,\n            payload: usuario.uid\n        });\n\n        // Cargar los mensajes del chat\n        const resp = await fetchConToken(`mensajes/${ usuario.uid }`);\n        dispatch({\n            type: types.cargarMensajes,\n            payload: resp.mensajes\n        });\n\n        scrollToBottom('mensajes');\n    }\n\n    return (\n        <div\n            className={`chat_list ${ (usuario.uid === chatActivo) && 'active_chat' }`}\n            onClick={ onClick }\n        >\n            {/* active_chat */}\n            <div className=\"chat_people\">\n                <div className=\"chat_img\"> \n                    {/* <img src=\"https://p.kindpng.com/picc/s/78-786207_user-avatar-png-user-avatar-icon-png-transparent.png\" alt=\"sunil\" /> */}\n                    <img src=\"https://www.freeiconspng.com/uploads/flat-face-icon-23.png\" width=\"350\" alt=\"flat face icon\"/>\n                </div>\n                <div className=\"chat_ib\">\n                    <h5> { usuario.nombre } </h5>\n                    {\n                        ( usuario.online )\n                            ? <span className=\"text-success\">Online</span>\n                            : <span className=\"text-danger\">Offline</span>\n                    }\n                   \n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react';\n\nimport { AuthContext } from '../auth/AuthContext';\nimport { ChatContext } from '../context/chat/ChatContext';\n\nimport { SidebarChatItem } from './SidebarChatItem';\n\nexport const Sidebar = () => {\n\n    const { chatState } = useContext( ChatContext );\n    const { auth } = useContext( AuthContext );\n\n    const { uid } = auth;\n\n    return (\n        <div className=\"inbox_chat\">\n            {\n                chatState.usuarios\n                    .filter( user => user.uid !== uid )\n                    .map( (usuario) => (\n                    <SidebarChatItem \n                        key={ usuario.uid }\n                        usuario={ usuario }\n                    />\n                ))\n            }\n\n\n            {/* <!-- Espacio extra para scroll --> */}\n            <div className=\"extra_space\"></div>\n            {/* <!-- muestra imagen si la hay y crea un div adrede --> */}\n\n            {\n                //si response.urlsegura\n                    // (note.url) //si http la muestra aqui SABER SI ES IMAGEN O NO\n                    // && (\n                        <div className=\"notes__image\">\n                            {/* <img \n                               // src={ note.url }\n                               src=\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif1_wa4r5r.webp\"\n                                alt=\"imagen\"\n                            /> */}\n                            <video controls autoPlay min-height=\"450\" width=\"100%\">\n                                <source src=\"https://res.cloudinary.com/web-roberto/video/upload/v1644152974/chatdb/q5ybc1j62v48wjjfrskk.mp4\" type=\"video/mp4\" />\n                            </video>\n                        </div>\n                    // )\n                }\n\n        </div>\n\n    )\n}\n","import React from 'react';\nimport { Searchbox } from './Searchbox';\nimport { Sidebar } from './Sidebar';\n\nexport const InboxPeople = () => {\n    return (\n        <div className=\"inbox_people\">\n\n            <Searchbox />\n\n            <Sidebar />\n\n        </div>\n    )\n}\n","import moment from 'moment';\n\n\nexport const horaMes = ( fecha ) => {\n\n    const hoyMes = moment( fecha );\n\n    return hoyMes.format('HH:mm a | MMMM Do');\n\n}","import React from 'react'\nimport { horaMes } from '../helpers/horaMes'\n\nexport const IncomingMessage = ({ msg }) => {\n\n    return (\n        <div className=\"incoming_msg\">\n            <div className=\"incoming_msg_img\">\n                <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" />\n            </div>\n            <div className=\"received_msg\">\n                <div className=\"received_withd_msg\">\n                    {                    \n                     (msg.mensaje.startsWith('https://res.cloudinary.com')) ? \n                        (msg.mensaje.endsWith('.mp4')) ? \n                        <video controls autoPlay min-height=\"450\" width=\"100%\">\n                                <source src={ msg.mensaje} type=\"video/mp4\" />\n                            </video>\n                        :   <span><img src={ msg.mensaje}/></span> \n                    :<p>{ msg.mensaje }</p>\n                    }                             \n\n                    <span className=\"time_date\"> { horaMes( msg.createdAt ) }</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { horaMes } from '../helpers/horaMes'\n\nexport const OutgoingMessage = ({ msg }) => {\n    return (\n        <div className=\"outgoing_msg\">\n            <div className=\"sent_msg\">\n            {                    \n                     (msg.mensaje.startsWith('https://res.cloudinary.com')) ? \n                        (msg.mensaje.endsWith('.mp4')) ? \n                        <video controls autoPlay min-height=\"450\" width=\"100%\">\n                                <source src={ msg.mensaje} type=\"video/mp4\" />\n                            </video>\n                        :   <span><img src={ msg.mensaje}/></span> \n                    :<p>{ msg.mensaje }</p>\n                    }\n                <span className=\"time_date\"> { horaMes( msg.createdAt ) } </span>\n            </div>\n        </div>\n    )\n}\n","import Swal from 'sweetalert2';\n\nexport const fileUpload = async ( file ) => {\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/web-roberto/upload';\n\n    const formData = new FormData();\n    formData.append('upload_preset','chatdb');\n    formData.append('file', file );\n    Swal.fire({title:'Uploading...', text:'Please wait..',allowOutsideClick:false,\n    onBeforeOpen: ()=>{Swal.showLoading();}});\n    try {  \n        console.log('VOY A HACER EL FETCH');      \n        const resp = await fetch( cloudUrl, {\n            method: 'POST',\n            body: formData\n        });          \n        Swal.close();\n        if ( !resp.ok ) {throw await resp.json();}   \n  \n        console.log('ROB- ANTES DEL AWAIT RESP.JSON Y ANTES DEL SECURE_URL: DESPUES DEL FETCH:');\n        const cloudResp = await resp.json();\n        console.log('ROB- SECURE_URL:',cloudResp.secure_url );\n        return cloudResp.secure_url;\n    } catch (err) {\n        Swal.fire('Error', 'Uploading the file', 'error');\n        throw err;\n    }\n    // return url de la imagen\n}","import React, { useContext, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport { AuthContext } from '../auth/AuthContext';\nimport { ChatContext } from '../context/chat/ChatContext';\nimport { SocketContext } from '../context/SocketContext';\n\n\nexport const GifSelect = () => {\n  let selection;\n  const [icon, setIcon] = useState(0);\n  const [ mensaje, setMensaje ] = useState('');\n\n  const { chatState } = useContext( ChatContext );\n  const { socket } = useContext( SocketContext );\n  const { auth } = useContext( AuthContext );\n\n\n  const handleChange = (event) => {\n  //  const next=event.target.value\n    const selection=event.target.value;\n   // console.log(document.getElementById('demo-simple-select-label').value);    \n   setIcon(selection); \n    console.log(selection);\n    console.log('valor de SELECTION antes de coger la url del icono: ',typeof(selection));\n    \n    switch (selection) {     \n        case 6:  setMensaje(\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif6_g7os4p.webp\");       \n        break;\n      default: \n      console.log('no es el 6'); \n        break;\n    }\n    // if ( selection == 0 ){setMensaje(''); return; }\n    // if ( selection == 1 ) setMensaje(\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif1_wa4r5r.webp\");\n    // if ( selection == 2 ) setMensaje(\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif2_yypn8a.webp\");\n    // if ( selection == 3 ) setMensaje(\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif3_mw5eao.jpg\");\n    // if ( selection == 4 ) setMensaje(\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif4_yqiprg.jpg\");\n    // if ( selection == 5 ) setMensaje(\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif5_qmw6bo.jpg\");\n    // if ( selection == 6 ) setMensaje(\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif6_g7os4p.webp\");\n    // if ( selection == 7 ) setMensaje(\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif7_useesv.webp\");\n    // if ( selection == 8 ) setMensaje(\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif7_useesv.webp\");\n    // if ( selection == 9 ) setMensaje(\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif9_xjbthy.webp\");\n    // if ( selection == 10 ) setMensaje(\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif10_p58ipq.webp\");\n    // if ( selection == 11 ) setMensaje(\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif11_l07gvl.webp\");\n// EL BOTON ESTA EN OTRO FICHERO ¿¿FUNCIONARA??\n    //document.querySelector('#send_btn').click();\n       // setIcon(1);\n       console.log('valor de SELECTION despues de coger la url del icono: ',selection);\n\n       console.log('MENSAJE DE SELECCION (antes del EMIT): ',mensaje);\n\n         socket.emit( 'mensaje-personal', {\n         de: auth.uid,\n         para: chatState.chatActivo,\n       //  mensaje:\"icono\"+selection\n       //  mensaje: \"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif3_mw5eao.jpg alt=\\\"icon\\\" width=\\\"60\\\" height=\\\"60\\\"\"\n       \n    //   //mensaje: \"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif3_mw5eao.jpg\"\n          mensaje });\n          console.log('MENSAJE DE SELECCION:(despues del EMIT): ',mensaje);\n           document.querySelector('#send_btn').click();\n                 //   setMensaje('');   \n     // document.querySelector('#demo-simple-select').click();\n    // setMensaje('');\n  };\n\n  return (\n    <Box sx={{ maxWidth: 100, maxHeigh:50 }}>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\"> <img src=\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif3_mw5eao.jpg\"  alt=\"icon\" width=\"30\" height=\"30\"/> </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={icon}\n          label=\"Icon\"\n          onChange={handleChange}\n          autoComplete=\"off\"        >\n          <MenuItem value={1}><img src=\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif1_wa4r5r.webp\" alt=\"icon\" width=\"50\" height=\"50\" /></MenuItem>\n          <MenuItem value={2}><img src=\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif2_yypn8a.webp\" alt=\"icon\" width=\"50\" height=\"50\"/></MenuItem>\n          <MenuItem value={3}><img src=\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif3_mw5eao.jpg\"  alt=\"icon\" width=\"50\" height=\"50\"/></MenuItem>\n          <MenuItem value={4}><img src=\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif4_yqiprg.jpg\"  alt=\"icon\" width=\"50\" height=\"50\"/></MenuItem>\n          <MenuItem value={5}><img src=\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif5_qmw6bo.jpg\"  alt=\"icon\" width=\"50\" height=\"50\"/></MenuItem>\n          <MenuItem value={6}><img src=\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif6_g7os4p.webp\"  alt=\"icon\" width=\"50\" height=\"50\"/></MenuItem>\n          <MenuItem value={7}><img src=\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif7_useesv.webp\"  alt=\"icon\" width=\"50\" height=\"50\"/></MenuItem>\n          <MenuItem value={8}><img src=\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif8_uy6iqj.webp\"  alt=\"icon\" width=\"50\" height=\"50\"/></MenuItem>\n          <MenuItem value={9}><img src=\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif9_xjbthy.webp\"  alt=\"icon\" width=\"50\" height=\"50\"/></MenuItem>\n          <MenuItem value={10}><img src=\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif10_p58ipq.webp\"  alt=\"icon\" width=\"50\" height=\"50\"/></MenuItem>\n          <MenuItem value={11}><img src=\"https://res.cloudinary.com/web-roberto/image/upload/v1644088908/gifs/gif11_l07gvl.webp\"  alt=\"icon\" width=\"50\" height=\"50\"/></MenuItem>\n        </Select>\n      </FormControl>\n    </Box>\n  );\n}\n\n\n\n\n\n\n\n\n","import { shadows } from '@mui/system';\nimport React, { useContext, useState } from 'react';\nimport Swal from 'sweetalert2';\nimport { AuthContext } from '../auth/AuthContext';\nimport { ChatContext } from '../context/chat/ChatContext';\nimport { SocketContext } from '../context/SocketContext';\n//import { Example } from '../Example';\nimport { fileUpload } from '../helpers/fileUpload';\n\nimport {GifSelect}   from '../helpers/GifSelect';\nimport UploadWidget from '../uploadwidget';\n\nlet cont=0;\nconst handlePictureClick = () => {\n       document.querySelector('#fileSelector').click();\n      //  document.getElementById(\"mensaje\").focus();\n    }   \n// let objwidget;\n\n\n// const widget = window.cloudinary.openUploadWidget({\n//     cloudName: \"web-roberto\",\n//     uploadPreset: \"chatdb\"},\n//     (error, result) => {checkUploadResult(result)});\n\n// const showWidget = (widget) => {\n//     Swal('voy a abrir dialogo','error')\n//     widget.open();   }\n\n//  const checkUploadResult = (resultEvent) => {\n//     if(resultEvent.event === 'success'){\n//       console.log(resultEvent)\n//     }\n//   }\n//   const handlePictureClick = () => {\n//   //  document.querySelector('#fileSelector').click();\n//     document.getElementById(\"mensaje\").focus();\n\n// }\n\nexport const SendMessage = () => {\n    const [ mensaje, setMensaje ] = useState('');\n    const { socket } = useContext( SocketContext );\n    const { auth } = useContext( AuthContext );\n    const { chatState } = useContext( ChatContext );\n\n    const onChange = ({ target }) => {\n        setMensaje( target.value );\n    }\n    const handleFileChange = async(e) => {\n        const file = e.target.files[0];        \n        //document.querySelector('#send_btn').click();cont=0;\n                console.log('ANTES DE SUBIR EL FICHERO -ANTES DEL IF: el E.TARGE.FILES[0]: ',file);\n                if ( file ) {\n                    console.log('ANTES DE SUBIR EL FICHERO -DENTRO DEL IF : ',file);\n                    // ya usa el syn/await y el try catch                  \n                    try{ const fileUrl =  await fileUpload( file );\n                        console.log('FICHERO SUBIDO A: ',fileUrl);\n                            if (fileUrl) {\n                            setMensaje(fileUrl );\n                            //CLICK SOBRE BOTON FORMULARIO                \n                            //  document.querySelector('#send_btn').click();\n                            socket.emit( 'mensaje-personal', {\n                             de: auth.uid,\n                             para: chatState.chatActivo,\n                            mensaje\n                            }); \n                            document.querySelector('#send_btn').click();\n                            setMensaje('');\n                        } else {\n                            Swal.fire(\"Error\",\"No url after loading File\",\"error\");}\n                        //  document.querySelector('#buttonfileSelector').click();\n                        }catch(err){\n                            Swal.fire('Error', 'Uploading the file', 'error');\n                            throw err;\n                        } } \n                    else { Swal.fire(\"Error\",\"NO FILE SELECTED\",\"error\"); }      \n\n    }\n\n    const onSubmit = (ev) => {\n        ev.preventDefault();\n        if ( mensaje.length === 0 ){ setMensaje('');return; }\n        \n        // TODO: Emitir un evento de sockets para enviar el mensaje\n        //\n        //     de: // UID del usuario enviando el mensaje\n        //     para: // UID del usuario que recibe el mensaje\n        //     mensaje: // lo que quiero enviar\n        // }\n        socket.emit( 'mensaje-personal', {\n            de: auth.uid,\n            para: chatState.chatActivo,\n            mensaje\n        });\n        // TODO: hacer el dispatch de el mensaje... \n    }\n\n    return (\n    <>\n            {/* <div style=\"display: block;\"> */}\n            <div className=\"send_select_file\">\n                {/* <div className=\"col-sm-3\"> */}\n                \n                 {/* <div className=\"col-sm-9\">    */}\n                 <div>\n                    <input id=\"fileSelector\" type=\"file\" name=\"file\"  style={{ display: \"none\" }}\n                        onChange={handleFileChange}  />            \n                    <button id=\"buttonfileSelector\"className=\"msg_send_btn mt-1\" style={{ width: '140px' }} onClick={ handlePictureClick }>Image/Video</button>\n                </div>  \n                </div> \n\n\n        <form onSubmit={ onSubmit }>\n            <div className=\"type_msg row\">\n            <div className=\"col-sm-2\" style={{padding:\"0px 0px 0px 0px !important\"}}>\n                    <GifSelect/>   \n                    <script>\n                    {/* document.querySelector('#send_btn').click();\n                    setMensaje('');     */}\n                    </script> \n                </div>\n                \n                <div className=\"input_msg_write col-sm-8\">\n                    <input\n                        type=\"text\"\n                        id=\"mensaje\"\n                        className=\"write_msg\"\n                        placeholder=\"Mensaje...\"\n                        value={ mensaje }\n                        onChange={ onChange }                        \n                        autoComplete=\"off\"\n                    />\n                </div>\n                <div className=\"col-sm-2\">\n                    <button id=\"send_btn\"className=\"msg_send_btn mt-1\" type=\"submit\">\n                        Send \n                    </button>\n                </div>\n            \n            </div>\n        </form>\n       \n    </>\n\n    )\n}\n","import React, { Component } from 'react';\n//import './App.css';\n\nclass UploadWidget extends Component {\n  showWidget = (widget) => {\n    widget.open();\n  }\n\n  checkUploadResult = (resultEvent) => {\n    if(resultEvent.event === 'success'){\n      console.log(resultEvent)\n    }\n  }\n  render() {\n      let widget = window.cloudinary.openUploadWidget({\n      cloudName: \"web-roberto\",\n      uploadPreset: \"chatdb\"},\n      (error, result) => {this.checkUploadResult(result)});\n\n    return (\n      <div className=\"App\">\n        <button onClick={this.showWidget}> Upload file</button>\n      </div>\n    );\n  }\n}\n\nexport default UploadWidget;","import React, { useContext } from 'react';\nimport { AuthContext } from '../auth/AuthContext';\nimport { ChatContext } from '../context/chat/ChatContext';\n\nimport { IncomingMessage } from './IncomingMessage';\nimport { OutgoingMessage } from './OutgoingMessage';\nimport { SendMessage } from './SendMessage';\n\nexport const Messages = () => {\n\n    const { chatState } = useContext( ChatContext );\n    const { auth } = useContext( AuthContext );\n\n    return (\n        <div className=\"mesgs\">\n\n            {/*  Historia inicio  */}\n            <div \n                id=\"mensajes\"\n                className=\"msg_history\"\n            >\n\n                {\n                    chatState.mensajes.map( msg => (\n                        ( msg.para === auth.uid )\n                            ? <IncomingMessage key={ msg._id } msg={ msg } />\n                            : <OutgoingMessage key={ msg._id } msg={ msg } />\n                    ))\n                }\n\n                \n\n            </div>\n            {/* <!-- Historia Fin --> */}\n\n           <SendMessage />\n\n        </div>\n    )\n}\n","import React, { useContext } from 'react';\nimport { ChatSelect } from '../components/ChatSelect';\nimport { InboxPeople } from '../components/InboxPeople';\nimport { Messages } from '../components/Messages';\nimport { ChatContext } from '../context/chat/ChatContext';\nimport '../css/chat.css';\n\n\n\n\nexport const ChatPage = () => {\n\n    const { chatState } = useContext( ChatContext );\n\n    return (\n        <div className=\"messaging\">\n            <div className=\"inbox_msg\">\n\n                <InboxPeople />\n\n                {\n                    ( chatState.chatActivo )\n                        ? <Messages />\n                        : <ChatSelect />\n                }               \n\n            </div>\n           \n      </div>\n    )\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Swal from 'sweetalert2';\n\nimport { AuthContext } from '../auth/AuthContext';\n\nexport const LoginPage = () => {\n\n    const { login } = useContext( AuthContext );\n    \n    const [ form, setForm ] = useState({\n        email: '',\n        password: '',\n        rememberme: false\n    });\n\n    useEffect(() => {\n        const email = localStorage.getItem('email');\n        if ( email ) {\n            setForm( (form) => ({\n                ...form,\n                email,\n                rememberme: true,\n            }));\n        }\n\n    }, [])\n\n\n    const onChange = ({ target }) => {\n        const { name, value } = target;\n        setForm({\n            ...form,\n            [name]: value\n        });\n    }\n\n    const toggleCheck = () => {\n        console.log('??');\n        setForm({\n            ...form,\n            rememberme: !form.rememberme\n        });\n    }\n\n    const onSubmit = async(ev) => {\n        ev.preventDefault();\n\n        (form.rememberme) \n            ? localStorage.setItem('email', form.email )\n            : localStorage.removeItem('email');\n        \n        const { email, password } = form;\n        const ok = await login( email, password );\n\n        if ( !ok ) {\n            Swal.fire('Error', 'Verifique el usuario y contraseña', 'error');\n        }\n    }\n\n    const todoOk = () => {\n        return ( form.email.length > 0 && form.password.length > 0 ) ? true : false;\n    }\n\n\n    return (\n        <form \n            className=\"login100-form validate-form flex-sb flex-w\"\n            onSubmit={ onSubmit }\n        >\n            <span className=\"login100-form-title mb-3\">\n                Chat - Ingreso\n            </span>\n            \n            <div className=\"wrap-input100 validate-input mb-3\">\n                <input\n                    className=\"input100\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    value={ form.email }\n                    onChange={ onChange }\n                />\n                <span className=\"focus-input100\"></span>\n            </div>\n            \n            \n            <div className=\"wrap-input100 validate-input mb-3\">\n                <input\n                    className=\"input100\"\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\" \n                    value={ form.password }\n                    onChange={ onChange }\n                />\n                <span className=\"focus-input100\"></span>\n            </div>\n            \n            <div className=\"row mb-3\">\n                <div \n                    className=\"col\"\n                    onClick={ ()=> toggleCheck() }\n                >\n                    <input\n                        className=\"input-checkbox100\"\n                        id=\"ckb1\"\n                        type=\"checkbox\"\n                        name=\"rememberme\" \n                        checked={ form.rememberme }\n                        readOnly\n                    />\n                    <label className=\"label-checkbox100\">\n                        Recordarme\n                    </label>\n                </div>\n\n                <div className=\"col text-right\">\n                    <Link to=\"/auth/register\" className=\"txt1\">\n                        Nueva cuenta?\n                    </Link>\n                </div>\n            </div>\n\n            <div className=\"container-login100-form-btn m-t-17\">\n                <button \n                    type=\"submit\"\n                    className=\"login100-form-btn\"\n                    disabled={ !todoOk() }\n                >\n                    Ingresar\n                </button>\n            </div>\n\n        </form>\n    )\n}\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\n\nimport { AuthContext } from '../auth/AuthContext';\n\n\n\n\nexport const RegisterPage = () => {\n\n    const { register } = useContext( AuthContext );\n    \n    const [ form, setForm ] = useState({\n        email: 'test6@test.com',\n        password: '123456',\n        name: 'Susana Paz'\n    });\n\n    const onChange = ({ target }) => {\n        const { name, value } = target;\n        setForm({\n            ...form,\n            [name]: value\n        });\n    }\n\n    const onSubmit = async(ev) => {\n        ev.preventDefault();\n        \n        const { email, password, name } = form;\n        const msg = await register( name, email, password );\n\n        if ( msg !== true ) {\n            Swal.fire('Error', msg, 'error');\n        }\n    }\n\n    const todoOk = () => {\n        return ( \n            form.email.length > 0 && \n            form.password.length > 0 &&\n            form.name.length > 0\n        ) ? true : false;\n    }\n\n\n    return (\n        <form \n            className=\"login100-form validate-form flex-sb flex-w\"\n            onSubmit={ onSubmit }\n        >\n            <span className=\"login100-form-title mb-3\">\n                Chat - Registro\n            </span>\n\n            <div className=\"wrap-input100 validate-input mb-3\">\n                <input\n                    className=\"input100\"\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Nombre\" \n                    value={ form.name }\n                    onChange={ onChange }\n                />\n                <span className=\"focus-input100\"></span>\n            </div>\n\n            \n            <div className=\"wrap-input100 validate-input mb-3\">\n                <input\n                    className=\"input100\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\" \n                    value={ form.email }\n                    onChange={ onChange }\n                />\n                <span className=\"focus-input100\"></span>\n            </div>\n            \n            \n            <div className=\"wrap-input100 validate-input mb-3\">\n                <input\n                    className=\"input100\"\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\" \n                    value={ form.password }\n                    onChange={ onChange }\n                />\n                <span className=\"focus-input100\"></span>\n            </div>\n            \n            <div className=\"row mb-3\">\n                <div className=\"col text-right\">\n                    <Link to=\"/auth/login\" className=\"txt1\">\n                        Ya tienes cuenta?\n                    </Link>\n                </div>\n            </div>\n\n            <div className=\"container-login100-form-btn m-t-17\">\n                <button\n                    type=\"submit\"\n                    className=\"login100-form-btn\"\n                    disabled={ !todoOk() }\n                >\n                    Crear cuenta\n                </button>\n            </div>\n\n        </form>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { LoginPage } from '../pages/LoginPage';\nimport { RegisterPage } from '../pages/RegisterPage';\n\nimport '../css/login-register.css';\n\nexport const AuthRouter = () => {\n    return (\n\n        <div className=\"limiter\">\n\t\t    <div className=\"container-login100\">\n\t\t\t    <div className=\"wrap-login100 p-t-50 p-b-90\">\n\n                    <Switch>\n                        <Route exact path=\"/auth/login\" component={ LoginPage } />\n                        <Route exact path=\"/auth/register\" component={ RegisterPage } />\n\n                        <Redirect to=\"/auth/login\" />\n                    </Switch>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PublicRoute = ({\n   isAuthenticated,\n   component: Component,\n   ...rest\n}) => {\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? <Component { ...props } />\n                    : <Redirect to=\"/\" />\n            )} \n        />\n    )\n}\n\n\n\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PrivateRoute = ({\n   isAuthenticated,\n   component: Component,\n   ...rest\n}) => {\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? <Component { ...props } />\n                    : <Redirect to=\"/auth\" />\n            )} \n        />\n    )\n}\n\n\n\n","import React, { useContext, useEffect } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n  } from 'react-router-dom';\nimport { AuthContext } from '../auth/AuthContext';\n\nimport { ChatPage } from '../pages/ChatPage';\nimport { AuthRouter } from './AuthRouter';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const AppRouter = () => {\n\n    const { auth, verificaToken } = useContext( AuthContext );\n\n    useEffect( () => {\n        verificaToken();\n    },[verificaToken])\n\n\n    if ( auth.checking ) {\n        return <h1>Espere por favor</h1>\n    }\n\n\n    return (\n        <Router>\n            <div>\n                \n                <Switch>\n                    {/* <Route path=\"/auth\" component={ AuthRouter } /> */}\n                    <PublicRoute isAuthenticated={ auth.logged } path=\"/auth\" component={ AuthRouter } />\n                    <PrivateRoute isAuthenticated={ auth.logged } exact path=\"/\" component={ ChatPage } />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { AuthProvider } from './auth/AuthContext';\nimport { ChatProvider } from './context/chat/ChatContext';\nimport { SocketProvider } from './context/SocketContext';\nimport { AppRouter } from './router/AppRouter';\n\nimport moment from 'moment';\nimport 'moment/locale/es';\nmoment.locale('es');\n\n\nexport const ChatApp = () => {\n    return (\n        <ChatProvider>\n            <AuthProvider>\n                <SocketProvider>\n                    <AppRouter />\n                </SocketProvider>\n            </AuthProvider>\n        </ChatProvider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChatApp } from './ChatApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <ChatApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}